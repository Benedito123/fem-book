.. !split

.. _fem:deq:1D:varform:abstract:

Abstract notation for variational formulations
----------------------------------------------

We have seen that variational formulations end up with a formula involving
:math:`u` and :math:`v`, such as :math:`(u',v')` and a formula involving :math:`v` and known
functions, such as :math:`(f,v)`. A widely used notation is to introduce an abstract
variational statement written as

.. math::
         a(u,v)=L(v)\quad\forall v\in V,

where :math:`a(u,v)` is a so-called *bilinear form* involving all the terms
that contain both the test and trial
function, while :math:`L(v)` is a *linear form* containing all the terms without
the trial function. For example, the statement

.. math::
         \int_{\Omega} u' v' {\, \mathrm{d}x} =
        \int_{\Omega} fv{\, \mathrm{d}x}\quad\hbox{or}\quad (u',v') = (f,v)
        \quad\forall v\in V

can be written in abstract form: *find :math:`u` such that*

.. math::
         a(u,v) = L(v)\quad \forall v\in V,

where we have the definitions

.. math::
         a(u,v) = (u',v'),\quad L(v) = (f,v){\thinspace .}  

The term *linear* means that

.. math::
         L(\alpha_1 v_1 + \alpha_2 v_2) =\alpha_1 L(v_1) + \alpha_2 L(v_2)

for two test functions :math:`v_1` and :math:`v_2`, and
scalar parameters :math:`\alpha_1` and :math:`\alpha_2`. Similarly, the term *bilinear*
means that :math:`a(u,v)` is linear in both its arguments:

.. math::
        \begin{align*}
        a(\alpha_1 u_1 + \alpha_2 u_2, v) &= \alpha_1 a(u_1,v) + \alpha_2 a(u_2, v),
        \\ 
        a(u, \alpha_1 v_1 + \alpha_2 v_2) &= \alpha_1 a(u,v_1) + \alpha_2 a(u, v_2)
        {\thinspace .}
        \end{align*}

In nonlinear problems these linearity properties do not hold in general
and the abstract notation is then

.. math::
         F(u;v)=0\quad\forall v\in V{\thinspace .}

The matrix system associated with :math:`a(u,v)=L(v)` can also be written in
an abstract form by inserting :math:`v={\psi}_i` and :math:`u=\sum_j c_j{\psi}_j`
in :math:`a(u,v)=L(v)`. Using the linear properties, we get

.. math::
         \sum_{j\in{\mathcal{I}_s}} a({\psi}_j,{\psi}_i) c_j = L({\psi}_i),\quad i\in{\mathcal{I}_s},
        

which is a linear system

.. math::
         \sum_{j\in{\mathcal{I}_s}}A_{i,j}c_j = b_i,\quad i\in{\mathcal{I}_s},

where

.. math::
         A_{i,j} =a({\psi}_j,{\psi}_i), \quad b_i = L({\psi}_i){\thinspace .}

In many problems, :math:`a(u,v)` is symmetric such that
:math:`a({\psi}_j,{\psi}_i) = a({\psi}_i,{\psi}_j)`. In those cases the
coefficient matrix becomes symmetric, :math:`A_{i,j}=A_{j,i}`, a property
that can simplify solution algorithms for linear systems
and make them more stable. The property also reduces memory
requirements and the computational work.

The abstract notation :math:`a(u,v)=L(v)` for linear differential equation problems
is much used in the literature and
in description of finite element software (in particular the
`FEniCS <http://fenicsproject.org>`__ documentation). We shall
frequently summarize variational forms using this notation.

.. _fem:deq:1D:optimization:

Variational problems and minimization of functionals
----------------------------------------------------

Example          (4)
~~~~~~~~~~~~~~~~~~~~

Many physical problems can be modeled as  partial differential equations
and as  minimization problems. For example, the deflection :math:`u(x)` of an
elastic string subject to a transversal force :math:`f(x)`
is governed by the differential equation problem

.. math::
         -u''(x) = f(x),\quad x\in (0,L),\quad x(0)=x(L)=0{\thinspace .}

Equivalently, the deflection :math:`u(x)` is the function :math:`v` that minimizes
the potential energy :math:`F(v)` in a string,

.. math::
         F(v) = \frac{1}{2}\int_0^L \left((v')^2 - fv\right){\, \mathrm{d}x}{\thinspace .}

That is, :math:`F(u) = \min_{v\in V}F(v)`. The quantity :math:`F(v)` is called a
functional: it takes one or more functions as input and produces a
number. Loosely speaking, we may say that a functional is
"a function of functions". Functionals very often involve
integral expressions as above.

A range of physical problems can be formulated either as a differential
equation or as a minimization of some functional. Quite often, the differential
equation arises from Newton's 2nd law of motion while the functional
expresses a certain kind of energy.

Many traditional applications of the finite element method, especially
in solid mechanics and constructions with beams and plates, start with
formulating :math:`F(v)` from physical principles, such as minimization of
elastic energy, and then proceeds with deriving :math:`a(u,v)=L(v)`, which
is the formulation usually desired in software implementations.

The general minimization problem
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The relation between a differential equation and minimization of a functional
can be expressed in a general mathematical way using our abstract
notation for a variational form: :math:`a(u,v)=L(v)`.
It can be shown that the variational statement

.. math::
         a(u,v)=L(v)\quad\forall v\in V,

is equivalent to minimizing the functional

.. math::
         F(v) = {\frac{1}{2}}a(v,v) - L(v) 

over all functions :math:`v\in V`. That is,

.. math::
         F(u)\leq F(v)\quad \forall v\in V{\thinspace .} 

Derivation
~~~~~~~~~~

[**kam 9**: need that F is convex and a is positive, symmetric, right? Check]

To see this, we write :math:`F(u)\leq F(\eta)`, :math:`\forall\eta\in V` instead
and set :math:`\eta=u + \epsilon v`, where :math:`v\in V` is an
arbitrary function in :math:`V`.
For any given arbitrary :math:`v`, we can view :math:`F(v)` as a function :math:`g(\epsilon)`
and find the extrema of :math:`g`, which is a function of one variable.
We have

.. math::
         F(\eta) = F(u+\epsilon v) = \frac{1}{2} a(u+\epsilon v,u + \epsilon v) - L(u + \epsilon v){\thinspace .}

From the linearity of :math:`a` and :math:`L` we get

.. math::
        \begin{align*}
        g(\epsilon) &= F(u+\epsilon u)\\ 
        &= \frac{1}{2} a(u + \epsilon v, u+\epsilon v) - L(u + \epsilon v)\\ 
        &= \frac{1}{2} a(u, u+\epsilon v) + \frac{1}{2} \epsilon a(v, u+\epsilon u) - L(u) - \epsilon L(v)\\ 
        &= \frac{1}{2} a(u, u) + \frac{1}{2} \epsilon a(u,v) + \frac{1}{2}\epsilon a(v, u) +
        \frac{1}{2}\epsilon^2 a(v,v) - L(u) - \epsilon L(v){\thinspace .}
        \end{align*}

If we now assume that :math:`a` is symmetric, :math:`a(u,v)=a(v,u)`, we can write

.. math::
         g(\epsilon) = \frac{1}{2} a(u,u) + \epsilon a(u,v) + \frac{1}{2}\epsilon^2 a(v,v) -
        L(u) -\epsilon L(v){\thinspace .}

The extrema of :math:`g` is found by searching for :math:`\epsilon` such that
:math:`g'(\epsilon)=0`:

.. math::
         g'(\epsilon) = a(u,v) - L(v) + \epsilon a(v,v) = 0{\thinspace .}

This linear equation in :math:`\epsilon` has a solution :math:`\epsilon = (a(u,v) - L(u))/a(v,v)` if :math:`a(v,v) > 0`. But recall that :math:`a(u,v)=L(v)` for any :math:`v`, so
we must have :math:`\epsilon =0`. Since the reasoning above holds for any :math:`v\in V`,
the function :math:`\eta = u+\epsilon v` that makes :math:`F(\eta)` extreme must have
:math:`\epsilon=0`, i.e., :math:`\eta = u`, the solution of :math:`a(u,v)=L(v)` for any :math:`v` in
:math:`V`.

Looking at :math:`g''(\epsilon) = a(v,v)`, we realize that :math:`\epsilon=0` corresponds
to a unique minimum if :math:`a(v,v)>0`.

The equivalence of a variational form :math:`a(u,v)=L(v)\ \forall v\in V` and
the minimization problem :math:`F(u)\leq F(v)\ \forall v\in V` requires that
1) :math:`a` is bilinear and :math:`L` is linear, 2) :math:`a(u,v)` is symmetric:
:math:`a(u,v)=a(v,u)`, and 3) that :math:`a(v,v)>0`.

Minimization of the discretized functional
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Inserting :math:`v=\sum_j c_j{\psi}_j` turns minimization of :math:`F(v)` into
minimization of a quadratic function of the parameters :math:`c_0,\ldots,c_N`:

.. math::
         \bar F(c_0,\ldots,c_N) = \sum_{j\in{\mathcal{I}_s}}\sum_{i\in{\mathcal{I}_s}} a({\psi}_i,{\psi}_j)c_ic_j - \sum_{j\in{\mathcal{I}_s}} L({\psi}_j)c_j
        

of :math:`N+1` parameters.

Minimization of :math:`\bar F` implies

.. math::
         \frac{\partial\bar F}{\partial c_i}=0,\quad i\in{\mathcal{I}_s}{\thinspace .}

After some algebra one finds

.. math::
         \sum_{j\in{\mathcal{I}_s}} a({\psi}_i,{\psi}_j)c_j = L({\psi}_i),\quad i\in{\mathcal{I}_s},

which is the same system as the one arising from :math:`a(u,v)=L(v)`.

Calculus of variations
~~~~~~~~~~~~~~~~~~~~~~

A branch of applied mathematics, called `calculus of variations <https://en.wikipedia.org/wiki/Calculus_of_variations>`__, deals
with the technique of minimizing functionals to derive differential
equations. The technique involves taking the *variation* (a kind of
derivative) of functionals, which have given name to
terms like variational form, variational
problem, and variational formulation.

